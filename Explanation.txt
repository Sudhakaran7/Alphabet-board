There is an alphabet board,

a  b  c  d  e
f  g  h  i  j
k  l  m  n  o
p  q  r  s  t
u  v  w  x  y
z

You are given with a string S1, you have to traverse the path of the S1's character on the board with the given condition,
'U' moves our position up one row, if the position exists on the board;
'D' moves our position down one row, if the position exists on the board;
'L' moves our position left one column, if the position exists on the board;
'R' moves our position right one column, if the position exists on the board;
'!' adds the character board[r][c] at our current position (r, c) to the answer.
Return a sequence of moves that makes our answer equal to target in the minimum number of moves.  You may return any path that does so.

Input Description:
S1 a string

Output Description:
print a sequence of moves that makes our answer equal to target in the minimum number of moves.

Sample Input:
guvi

Sample Output:
DR!DDDL!R!UUURR!

Explanation:
The given string is "guvi",
initially we have to move from 'a' and we have move Down,Right and ! ->(g)
Down,Down,Down,left and ! ->(u)
Right and ! ->(v)
Up,Up,Up,Right,Right and ! -> (i)

Sample Input:
hello

Sample Output:
DRR!URR!DDLLL!!RRR!

Sample Input:
world

Sample Output:
DDDDRR!UURR!DLL!UL!UURR!

Sample Input:
python

Sample Output:
DDD!DRRRR!U!UULL!DRR!L!

Sample Input:
project

Sample Output:
DDD!RR!URR!U!U!LL!DDDRR!

Sample Input:
alphabet

Sample Output:
!DDR!DL!UURR!ULL!R!RRR!DDD!
